# formatting(포메팅)
# 문자열을 출력할 때 문자열을 원하는 형식으로 꾸미는 것

# 이스케이프 문자
# 프로그래밍을 할 대 미리 정의해문 문자 조합
# \n (enter)
# \b (backspace)

a=10
print("데이터 표현 a = ", a,"입니다", sep="")
# 데이터 표현 a =10입니다

############ 1. %연산자(서식문자) ###########
# 문자열 내에서 데이터가 들어갈 위치에 그 데이터의 형식에 맞는 서식문자를 입력하고 데이터를 후에 입력해서 그 위치에 대입하는 방법
a=10
print("데이터 표현 a = %d입니다" %a)
# 데이터 표현 a = 10입니다
# %d : 숫자 10진수 데이터

name = "홍길동"
print("내 이름은 %s입니다" %name)
# 내 이름은 홍길동입니다
# %s : 문자열 데이터

height = 175.4
print("내 키는 %f 입니다" %height)
# 내 키는 175.400000 입니다
# %f : 실수 데이터, 소수점을 기본적으로 6자리 표현

print("내 이름은 %s 이고, 키는 %.1f입니다." %(name,height))
# 내 이름은 홍길동 이고, 키는 175.4입니다.
# 작성한 데이터 순서대로 문자열에 위치한 서식 문자에 데이터가 대입된다.


############ 2. format() 메서드 ###########
# 문자열에서 사용 할 수 있는 메서드
# 메서드의 인수로 변수나 값을 표시하고, 해당 값이 표시될 위치에는 {} 로 표시
# 인수 : 함수나 메서드를 사용 할 때 건네주는 데이터
print("내 이름은 {} 입니다.".format(name))
# 내 이름은 홍길동 입니다.

print("내 이름은 {1}이고, 나이는 {0}살 입니다.".format(a,name))
# 내 이름은 홍길동이고, 나이는 10살 입니다.
# 인덱스를 지정해서 사용 가능, 데이터는 중복 사용이 가능하나 모든 {}안에 인덱스를 사용하여야 한다.

print("내 이름은 {이름}이고, 나이는 {나이}살 입니다.".format(이름=name, 나이=a))
# 사용할 1회용 변수명을 사용 할 수 있다. 메서드가 끝나면 인식 못한다.

print("{:<10}".format("hi")) #전체 10칸 데이터 hi 좌측 정렬
print("{:>10}".format("hi")) #전체 10칸 데이터 hi 우측 정렬
print("{:^10}".format("hi")) #전체 10칸 데이터 hi 중앙 정렬

print("{}".format(3.1415))  #3.1415
print("{:.2f}".format(3.1415)) #3.14, 소수점 자리수를 지정할 수 있다.
print("{:=^30}".format(" 정렬 ")) #============= 정렬 =============
# 빈공간 채우기 : 정렬 옵션 앞에 문자를 1개 작성하면 데이터가 없는 공백 공간을 작성한 문자로 대체한다.

########### 3. f-Strings ###########
# 파이썬 3.0.6 버전 이후 부터 사용이 가능
# format 메서드를 파이썬의 문자열의 기본 기능으로 만든 것
# format 메서드 보다는 직관적이다.

# 데이터를 넣고 싶은 구간에 {} 를 사용한다
# {data:옵션}
# 특징: 문자열 앞에 f를 붙여서 f-Strings 라는 것을 표시해야 한다.

who = "you"
how = "happy"

print(f"{who} make me {how}")
# you make me happy
# {}위치에 바로바로 데이터를 작성한다.

print(f"내년에 나는 {25+2}살 입니다.")
# 내년에 나는 27살 입니다.

'''
[문제]
변수 number에 숫자 5를 담고 아래의 출력 결과와 같이 출력되도록 하시오.
포매팅 형식은 %연산자, format 메서드 포매팅, f-문자열 포매팅 3가지 방식으로 표현하시오

[출력 결과]
I eat 5 apples.
I eat 5 apples.
I eat 5 apples.
'''

number = 5
print("I eat %d apples" %number)
print("I eat {} apples" .format(number))
print(f"I eat {number} apples")
