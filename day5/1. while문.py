'''
반복문
동일한 작업(코드)를 계속해서 수행해야 할 경우에 사용하는 제어문
1~100 까지 출력해보자

반복문 종류 2가지
while문, for 문

while 문을 for 문으로 for 문을 while 문으로 변환할 수 있다.

while 문은 반복횟수가 정해져 있지 않고, 특정 종료 조건을 알고 있을 때 for 문은 반복 횟수가 정해져 있거나, 어떤 데이터를 순회할 때 구현하기가 편하다

예) 복권을 산다
while 문으로 접근 : 내가 복권을 몇 개 사면 당첨 되지? <--- 특정 조건을 만족하는 동안 계속 해서 반복 수행
for 문으로 접근 : 내가 50개의 복권을 샀는데 몇 개 당첨 되었을까?
'''

# while 5:
#     print("hello")
#반복문이 진행되는 동안 조건문의 결과를 바꿀 수 없어서 while문에 갇힘. 무한 루프(조건식이 항상 참인 반복문)

num = 0
while num < 5:
    print('hello')
    num += 1
# 조건을 설정하는 변수가 조건문에 들어가야함. 반복문 다음에는 변수의 값을 바꾸는 식도 있어야함.
# 주의점 : while문의 조건식에서 사용되는 변수는 while문 내부에서는 선언할 수 없다.

num = 1
while num <= 100:
    print(num)
    num += 1

'''
반복문의 중첩
반복 횟수는 안쪽 반복믄의 횟수 * 감싸고 있는 반복문의 횟수
반복문안에 변수의 초기화를 진행하면 반복문이 실행될 때마다 새로 초기화가 일어 난다.
'''

day = 5
while day <= 8:
    hour = 1 # 시간이 계속 증감하는 것을 방지하기 위해 변수의 초기화를 위해 반복문 안에 두었음
    li = []
    while hour <= 3:
        print(f'{day}일차 {hour}교시 입니다')
        li.append(hour)
        print(li)
        hour += 1
    day += 1
